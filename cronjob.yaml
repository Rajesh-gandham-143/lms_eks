apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup
spec:
  schedule: "* * * * *"  # Adjust the cron schedule as needed (this example runs at the top of every hour)
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: postgres-backup
              image: ubuntu:latest  # Use a lightweight image with AWS CLI installed
              command: ["/bin/sh", "-c"]
              args:
                - |
                  # Install required tools
                  apt-get update && apt-get install -y curl unzip && \
                  # Download the AWS CLI bundle
                  curl "https://s3.amazonaws.com/aws-cli/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && \
                  # Unzip the AWS CLI bundle
                  unzip awscliv2.zip && \
                  # Install AWS CLI
                  sudo ./aws/install && \
                  # Clean up
                  rm -rf awscliv2.zip aws/ && \
                  # Get the name of the PostgreSQL pod
                  POD_NAME=$(kubectl get pods --selector=component=postgres -o jsonpath='{.items[0].metadata.name}') && \
                  # Execute pg_dump inside the PostgreSQL pod and create a backup
                  kubectl exec $POD_NAME -- pg_dumpall -U postgres > /tmp/backup.sql && \
                  # Copy the backup file to S3
                  aws s3 cp /tmp/backup.sql s3://lms-appdata/backups/backup-$(date +%Y%m%d%H%M%S).sql
              volumeMounts:
                - name: aws-secret-volume
                  mountPath: /mnt/secrets  # Path to mount the secret
                  readOnly: true
          restartPolicy: OnFailure
          volumes:
            - name: aws-secret-volume
              secret:
                secretName: aws-secret  # Replace with your AWS secret name that contains credentials
